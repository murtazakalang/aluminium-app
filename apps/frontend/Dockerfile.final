# FINALIZED & RELIABLE FRONTEND DOCKERFILE

# ---- Base Stage ----
# Use a specific version of Node.js for consistency.
FROM node:18-alpine AS base
RUN apk add --no-cache libc6-compat

# ---- Dependencies Stage ----
# This stage is dedicated to installing dependencies, and will be cached
# by Docker if your package.json files don't change.
FROM base AS deps
WORKDIR /usr/src/app

# Set memory limit for Node.js to prevent crashes on low-resource machines.
ENV NODE_OPTIONS="--max-old-space-size=1536"

# Copy package.json files from the monorepo root and the frontend app.
COPY package.json package-lock.json* ./
COPY apps/frontend/package.json ./apps/frontend/
COPY packages/types/package.json ./packages/types/

# Install ALL dependencies (devDependencies are required for `next build`).
# Using `npm ci` is faster and more reliable for CI/CD environments.
RUN npm ci

# ---- Builder Stage ----
# This stage builds the Next.js application.
FROM base AS builder
WORKDIR /usr/src/app
ENV NODE_ENV=production

# Copy dependencies from the 'deps' stage.
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY --from=deps /usr/src/app/package.json ./package.json
COPY --from=deps /usr/src/app/apps/frontend/package.json ./apps/frontend/package.json
COPY --from=deps /usr/src/app/packages/types/package.json ./packages/types/package.json


# Copy the rest of the source code.
COPY . .

# Build the Next.js application.
# This will also run linting and type checking.
RUN npm run build --workspace=apps/frontend

# ---- Runner Stage ----
# This is the final, small, and optimized image that will run in production.
FROM base AS runner
WORKDIR /usr/src/app
ENV NODE_ENV=production

# Create a non-root user for better security.
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy the standalone Next.js server output from the builder stage.
COPY --from=builder /usr/src/app/apps/frontend/.next/standalone ./apps/frontend/
# Copy the public and static assets.
COPY --from=builder /usr/src/app/apps/frontend/public ./apps/frontend/public
COPY --from=builder /usr/src/app/apps/frontend/.next/static ./apps/frontend/.next/static

# Set the 'nextjs' user as the user to run the application.
USER nextjs

# Expose the port the app will run on.
EXPOSE 3000

# Set the working directory to the frontend app folder.
WORKDIR /usr/src/app/apps/frontend

# The command to start the Next.js server.
CMD ["node", "server.js"] 