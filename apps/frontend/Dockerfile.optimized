# Optimized Dockerfile for Frontend (Next.js) - Performance Focused

# --- Dependencies Stage ---
FROM node:18-alpine AS deps

# Install system dependencies
RUN apk add --no-cache libc6-compat

# Set memory limits for Node.js to prevent OOM during builds
ENV NODE_OPTIONS="--max-old-space-size=1536"

WORKDIR /usr/src/app

# Copy package files for better layer caching
COPY package*.json ./
COPY apps/frontend/package*.json ./apps/frontend/

# Copy packages directory structure
COPY packages/ ./packages/

# Clean npm cache and install dependencies with optimizations
RUN npm cache clean --force && \
    npm ci --only=production --no-audit --no-fund --prefer-offline && \
    npm cache clean --force

# --- Builder Stage ---
FROM node:18-alpine AS builder

# Set memory limits for build process
ENV NODE_OPTIONS="--max-old-space-size=1536"
ENV NODE_ENV=production

WORKDIR /usr/src/app

# Copy package files
COPY package*.json ./
COPY apps/frontend/package*.json ./apps/frontend/
COPY packages/ ./packages/

# Install dependencies with timeout and retries
RUN npm cache clean --force && \
    timeout 600 npm ci --include=dev --no-audit --no-fund --prefer-offline || \
    (npm cache clean --force && npm ci --include=dev --no-audit --no-fund) && \
    npm cache clean --force

# Copy source code
COPY apps/frontend/ ./apps/frontend/

# Build with memory optimization
WORKDIR /usr/src/app/apps/frontend
RUN npm run build

# --- Production Runner Stage ---
FROM node:18-alpine AS runner

WORKDIR /usr/src/app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /usr/src/app/apps/frontend/public ./apps/frontend/public/

# Copy Next.js build artifacts
COPY --from=builder --chown=nextjs:nodejs /usr/src/app/apps/frontend/.next/standalone ./apps/frontend/
COPY --from=builder --chown=nextjs:nodejs /usr/src/app/apps/frontend/.next/static ./apps/frontend/.next/static/

USER nextjs

EXPOSE 3000

WORKDIR /usr/src/app/apps/frontend

CMD ["node", "server.js"] 