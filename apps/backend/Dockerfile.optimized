# Optimized Dockerfile for Backend (Node.js/Express) - Performance Focused

# Use Alpine Linux for smaller image size
FROM node:18-alpine AS development

# Install minimal Puppeteer dependencies for Alpine
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    && rm -rf /var/cache/apk/*

# Tell Puppeteer to use the system-installed Chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser \
    PUPPETEER_ARGS="--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-accelerated-2d-canvas --no-first-run --no-zygote --disable-gpu"

# Set the working directory in the container
WORKDIR /usr/src/app

# Copy package.json files first for better caching
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/

# Install dependencies
RUN npm ci --only=production --no-audit --no-fund \
    && npm cache clean --force

# Copy the source code
COPY apps/backend/src ./apps/backend/src

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs \
    && adduser -S nextjs -u 1001

USER nodejs

# Application Port
EXPOSE 3001

# Set working directory to backend
WORKDIR /usr/src/app/apps/backend

# Command to run the app
CMD [ "node", "src/server.js" ]

# --- Production Build Stage ---
FROM node:18-alpine AS builder

WORKDIR /usr/src/app

# Copy package.json files
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/

# Install all dependencies for building
RUN npm ci --include=dev --no-audit --no-fund

# Copy source code
COPY apps/backend/src ./apps/backend/src

# --- Production Runtime Stage ---
FROM node:18-alpine AS production

# Install minimal Puppeteer dependencies
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    && rm -rf /var/cache/apk/*

# Tell Puppeteer to use the system-installed Chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser \
    PUPPETEER_ARGS="--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-accelerated-2d-canvas --no-first-run --no-zygote --disable-gpu"

WORKDIR /usr/src/app

# Copy package files
COPY apps/backend/package*.json ./apps/backend/
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production --no-audit --no-fund \
    && npm cache clean --force

# Copy source code
COPY --from=builder /usr/src/app/apps/backend/src ./apps/backend/src

# Create non-root user
RUN addgroup -g 1001 -S nodejs \
    && adduser -S nodejs -u 1001

# Change ownership
RUN chown -R nodejs:nodejs /usr/src/app

USER nodejs

# Expose the application port
EXPOSE 3001

# Set environment to production
ENV NODE_ENV=production

# Command to run the optimized production app
WORKDIR /usr/src/app/apps/backend
CMD [ "node", "src/server.js" ] 